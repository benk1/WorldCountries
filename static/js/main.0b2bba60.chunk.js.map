{"version":3,"sources":["components/Header.jsx","components/Country.jsx","components/Countries.jsx","components/SearchCountry.jsx","components/CountryHeader.jsx","components/SortBy.jsx","App.js","index.js"],"names":["Header","countries","className","length","Country","country","languages","map","c","name","join","currencyName","currencies","currencySymbol","symbol","src","flag","alt","capital","population","Countries","countryList","key","SearchCountry","handleChange","text","onChange","type","value","id","htmlFor","CountryHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","this","columns","onClick","label","Component","SortBy","App","state","isLoading","handleSort","setState","e","target","toLowerCase","axios","get","data","console","log","filteredCountryByName","filter","startsWith","sorted","_","orderBy","hideDiv","onRenderSortIcon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b2bba60.chunk.js","sourcesContent":["import React from 'react'\nconst Header = ({countries}) => {\n  \n  return (\n    <div className='grey lighten-5 container header'>\n    <h1 className=' orange-text darken-5'>Get To Know World Countries </h1>\n    <h5 className='black-text darken-5 center'>At the moment we have {countries.length} Countries.</h5>\n    </div>\n  );\n}\n \nexport default Header;","import React from 'react';\nconst Country = ({ country }) => {\n\t// const { flags, name, capital, languages, population } = country;\n\t// console.log('wewee',currencies);\n\tconst languages = country.languages\n\t\t.map((c) => (c.length > 1 ? c.name : c.name))\n\t\t.join(',');\n\tconst currencyName =\n\t\tcountry.currencies && country.currencies.map((c) => c.name).join(',');\n\tconst currencySymbol =\n\t\tcountry.currencies && country.currencies.map((c) => c.symbol).join(',');\n\n\treturn (\n\t\t<div className=\"row \">\n\t\t\t<div className=\"col s12 m12 l12 \">\n\t\t\t\t<div className=\"card white lighten-5\">\n\t\t\t\t\t<div className=\"card-content dark-text darken-2\">\n\t\t\t\t\t\t<div className=\"countryFlag\">\n\t\t\t\t\t\t\t<img src={country.flag} alt=\"country_flag\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span className=\"card-title orange-text darken-2 center\">\n\t\t\t\t\t\t\t{country.name}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t<b>Capital</b>: {country.capital}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t<b>Languages Spoken</b>: {languages}{' '}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t<b>Currencies</b>: {currencyName} - ({currencySymbol}){' '}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t<b>Population</b>: {country.population}{' '}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Country;\n","import React from 'react';\nimport Country from './Country';\n\nconst Countries = ({ countries }) => {\n\tconst countryList = countries.map((country) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Country key={country.name} country={country} />\n\t\t\t</>\n\t\t);\n\t});\n\treturn <div className=\"grey lighten-3 countryList\">{countryList}</div>;\n};\n\nexport default Countries;\n","import React from 'react'\n\nconst SearchCountry = ({handleChange,text}) => {\n  return ( \n    <div className=\"row input\">\n        <div className=\"input-field col s6\">\n          <i className=\"material-icons prefix\">search</i>\n          <input\n            onChange={handleChange}\n            type=\"text\"\n            \n            value={text}\n            id='search'\n            className='validate'\n            \n          />\n          <label className=\"active black-text darken-5\" htmlFor=\"search\">\n            Search By Country's Name\n          </label>\n        </div>\n      </div>\n   );\n}\n \nexport default SearchCountry;\n\n","import React, { Component } from 'react'\nclass CountryHeader extends Component {\n  \n  raiseSort = (path) =>{\n    const sortColumn = {...this.props.sortColumn}\n    if(sortColumn.path === path)\n    sortColumn.order = (sortColumn.order ==='asc') ? 'desc': 'asc'\n    else{\n      sortColumn.path = path;\n      sortColumn.order = 'asc';\n    }\n    this.props.onSort(sortColumn)\n  }\n\n  renderSortIcon=(column) =>{\n    const {sortColumn} = this.props\n    if(column.path !== sortColumn.path) return null\n    if(sortColumn.order === 'asc') return <i className=\"material-icons\">arrow_upward</i>\n    return <i className=\"material-icons\">arrow_downward</i>\n  }\n  render() { \n    return (\n      \n        <div className='sortDiv'>\n          \n        {this.props.columns.map(column => <button key={column.path} className=\"blue darken-5 waves-effect waves-light btn-large\" onClick={() =>this.raiseSort(column.path)}>{column.label}{this.renderSortIcon(column)}</button> )}\n          \n        </div>\n      \n    );\n  }\n}\n \nexport default CountryHeader;","import React, { Component } from 'react';\nimport CountryHeader from './CountryHeader';\nclass SortBy extends Component {\n\n  columns = [\n    {path: 'name', label: \"NAME\"},\n    {path: 'capital', label: \"CAPITAL\"},\n    {path: 'population', label: \"POPULATION\"}\n  ]\n  \n  render() { \n    const {sortColumn,onSort} = this.props\n    return ( \n      <div>\n            <CountryHeader columns={this.columns} sortColumn={sortColumn} onSort={onSort}/>\n           </div>\n     );\n  }\n}\n \n \nexport default SortBy;\n\n","import React, { Component } from 'react';\n\n//import {countriesData} from './data/countries'\n\nimport './App.css';\nimport Header from './components/Header';\nimport Countries from './components/Countries';\nimport SearchCountry from './components/SearchCountry';\nimport _ from 'lodash';\nimport SortBy from './components/SortBy';\nimport axios from 'axios';\nimport { countriesData } from './data/countries';\n\nconst urlAPI = 'https://restcountries.com/v2/all ';\nclass App extends Component {\n\tstate = {\n\t\ttext: '',\n\t\t// countries: countriesData,\n\t\tcountries: [],\n\t\tisLoading: false,\n\t\tsortColumn: { path: 'name', order: 'asc' },\n\t};\n\n\tasync componentDidMount() {\n\t\t//this.fetchCountryData()\n\t\ttry {\n\t\t\tconst { data: countries } = await axios.get(urlAPI);\n\n\t\t\tthis.setState({\n\t\t\t\tcountries,\n\t\t\t\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t\tthis.setState({\n\t\t\tisLoading: false\n\t\t})\n\t}\n\n\thandleSort = (sortColumn) => {\n\t\tthis.setState({\n\t\t\tsortColumn,\n\t\t});\n\t};\n\n\thandleChange = (e) => {\n\t\tconst { value } = e.target;\n\t\tthis.setState({\n\t\t\ttext: value.toLowerCase(),\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { text, countries, sortColumn, isLoading } = this.state;\n\n\t\tconst filteredCountryByName = countries.filter((c) =>\n\t\t\tc.name.toLowerCase().startsWith(text)\n\t\t);\n\n\t\tconst sorted = _.orderBy(\n\t\t\tfilteredCountryByName,\n\t\t\t[sortColumn.path],\n\t\t\t[sortColumn.order]\n\t\t);\n\n\t\tconst hideDiv = !(text === '') ? (\n\t\t\tsorted.length > 1 ? (\n\t\t\t\t<p className=\"center  orange-text darken-5\">\n\t\t\t\t\t{sorted.length} Countries found which starts with letter{' '}\n\t\t\t\t\t<b className=\"black-text\">{text}</b>{' '}\n\t\t\t\t</p>\n\t\t\t) : (\n\t\t\t\t<p className=\"center  orange-text darken-5\">\n\t\t\t\t\t{sorted.length} Country found which starts with letter{' '}\n\t\t\t\t\t<b className=\"black-text\">{text}</b>{' '}\n\t\t\t\t</p>\n\t\t\t)\n\t\t) : null;\n\n\t\tif (isLoading) return <p>Data is Loading...</p>;\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<Header countries={countries} />\n\t\t\t\t{hideDiv}\n\t\t\t\t<SearchCountry handleChange={this.handleChange} />\n\t\t\t\t<SortBy\n\t\t\t\t\tsortColumn={sortColumn}\n\t\t\t\t\tonSort={this.handleSort}\n\t\t\t\t\tonRenderSortIcon={this.renderSortIcon}\n\t\t\t\t/>\n\n\t\t\t\t<Countries countries={sorted} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}